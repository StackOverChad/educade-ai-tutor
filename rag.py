import os
import streamlit as st
from dotenv import load_dotenv
from langchain_huggingface import HuggingFaceEmbeddings
from qdrant_client import QdrantClient, models
from qdrant_client.http.exceptions import UnexpectedResponse
from openai import OpenAI
import re

# --- HYBRID CREDENTIALS LOADER ---
# This block of code works BOTH locally and on Streamlit Cloud.
qdrant_url = None
qdrant_api_key = None
openai_api_key = None
error_message = None

try:
    # This is the primary method for Streamlit Cloud deployment
    qdrant_url = st.secrets["QDRANT_URL"]
    qdrant_api_key = st.secrets["QDRANT_API_KEY"]
    openai_api_key = st.secrets["OPENAI_API_KEY"]
    if not qdrant_url or not qdrant_api_key or not openai_api_key:
        error_message = "One or more secrets are empty in the Streamlit Cloud dashboard."
except (KeyError, FileNotFoundError):
    # This is the fallback for local development
    load_dotenv()
    qdrant_url = os.getenv("QDRANT_URL")
    qdrant_api_key = os.getenv("QDRANT_API_KEY")
    openai_api_key = os.getenv("OPENAI_API_KEY")
    if not qdrant_url or not qdrant_api_key or not openai_api_key:
        error_message = "Could not find credentials in the .env file for local development."

# --- INITIALIZE CLIENTS ---
if not error_message:
    qdrant_client = QdrantClient(url=qdrant_url, api_key=qdrant_api_key)
    openai_client = OpenAI(api_key=openai_api_key)
else:
    qdrant_client = None
    openai_client = None

# --- CONSTANTS AND CONFIGS ---
#
# --- THIS IS THE CRITICAL CHANGE ---
# The collection name now matches the one created by the Colab script.
COLLECTION_NAME = "educade_data_v1"
#
#
embeddings = HuggingFaceEmbeddings(model_name="sentence-transformers/all-MiniLM-L6-v2")


LANGUAGE_CONFIGS = {
     "en": { "name": "English", "english_name": "English", "requires_translation": False, "system_prompt": "You are a playful and encouraging tutor for young kids. When a kid asks a question, you respond with a hint or a question back to make them think and guess the answer interactively. Keep the conversation friendly, simple, fun, and strictly in English." },
    "es": { "name": "Espa├▒ol", "english_name": "Spanish", "requires_translation": True, "system_prompt": "Eres un tutor de espa├▒ol juguet├│n y alentador. Siempre respondes solo en espa├▒ol. Nunca das la respuesta directamente, sino que haces una pregunta o una pista para ayudar al ni├▒o a pensar.", "few_shot_user": "┬┐Por qu├й el cielo es azul?", "few_shot_assistant": "┬бQu├й gran pregunta! Nuestro cielo tiene una capa m├бgica que dispersa la luz del sol y la hace parecer azul. ┬┐Puedes adivinar qu├й es esa capa? ЁЯдФ", "final_prompt_template": "Usa el dato clave '{fact}' para formar una pista. Ahora, siguiendo el ejemplo anterior, responde la pregunta del usuario con una pista divertida o una nueva pregunta en espa├▒ol puro.\nPregunta del usuario: \"{question}\"" },
    "fr": { "name": "Fran├зais", "english_name": "French", "requires_translation": True, "system_prompt": "Tu es un tuteur de fran├зais enjou├й et encourageant. Tu r├йponds toujours uniquement en fran├зais. Tu ne donnes jamais la r├йponse directement, mais tu poses une question ou donnes un indice pour aider l'enfant ├а r├йfl├йchir.", "few_shot_user": "Pourquoi le ciel est-il bleu?", "few_shot_assistant": "Quelle excellente question! Notre ciel a une couche magique qui disperse la lumi├иre du soleil et la fait para├оtre bleue. Peux-tu deviner ce qu'est cette couche? ЁЯдФ", "final_prompt_template": "Utilise le fait cl├й '{fact}' pour formuler un indice. Maintenant, en suivant l'exemple ci-dessus, r├йponds ├а la question de l'utilisateur avec un indice amusant ou une nouvelle question en fran├зais pur.\nQuestion de l'utilisateur: \"{question}\"" },
    "hi": { "name": "рд╣рд┐рдВрджреА", "english_name": "Hindi", "requires_translation": True, "system_prompt": "рдЖрдк рдПрдХ рдЪрдВрдЪрд▓ рдФрд░ рдЙрддреНрд╕рд╛рд╣рдЬрдирдХ рд╣рд┐рдВрджреА рдЯреНрдпреВрдЯрд░ рд╣реИрдВред рдЖрдк рд╣рдореЗрд╢рд╛ рджреЗрд╡рдирд╛рдЧрд░реА рд▓рд┐рдкрд┐ рдореЗрдВ рдХреЗрд╡рд▓ рд╣рд┐рдВрджреА рдореЗрдВ рдЙрддреНрддрд░ рджреЗрддреЗ рд╣реИрдВред рдЖрдк рдХрднреА рднреА рд╕реАрдзрд╛ рдЙрддреНрддрд░ рдирд╣реАрдВ рджреЗрддреЗ, рдмрд▓реНрдХрд┐ рдмрдЪреНрдЪреЗ рдХреЛ рд╕реЛрдЪрдиреЗ рдореЗрдВ рдорджрдж рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рдПрдХ рд╕рдВрдХреЗрдд рдпрд╛ рдПрдХ рдордЬреЗрджрд╛рд░ рдкреНрд░рд╢реНрди рдкреВрдЫрддреЗ рд╣реИрдВред", "few_shot_user": "рдЖрд╕рдорд╛рди рдиреАрд▓рд╛ рдХреНрдпреЛрдВ рд╣реИ?", "few_shot_assistant": "рд╡рд╛рд╣, рдХреНрдпрд╛ рдмрдврд╝рд┐рдпрд╛ рд╕рд╡рд╛рд▓ рд╣реИ! рд╣рдорд╛рд░реЗ рдЖрдХрд╛рд╢ рдореЗрдВ рдПрдХ рдЬрд╛рджреВ рдХреА рдкрд░рдд рд╣реИ рдЬреЛ рд╕реВрд░рдЬ рдХреА рд░реЛрд╢рдиреА рд╕реЗ рдиреАрд▓рд╛ рд░рдВрдЧ рдмрд┐рдЦреЗрд░ рджреЗрддреА рд╣реИред рдХреНрдпрд╛ рдЖрдк рдЕрдиреБрдорд╛рди рд▓рдЧрд╛ рд╕рдХрддреЗ рд╣реИрдВ? ЁЯдФ", "final_prompt_template": "рдореБрдЦреНрдп рддрдереНрдп '{fact}' рдХрд╛ рдкреНрд░рдпреЛрдЧ рдХрд░рдХреЗ рдПрдХ рд╕рдВрдХреЗрдд рдмрдирд╛рдПрдВред рдЕрдм, рдКрдкрд░ рджрд┐рдП рдЧрдП рдЙрджрд╛рд╣рд░рдг рдХрд╛ рдЕрдиреБрд╕рд░рдг рдХрд░рддреЗ рд╣реБрдП, рдЙрдкрдпреЛрдЧрдХрд░реНрддрд╛ рдХреЗ рдкреНрд░рд╢реНрди рдХрд╛ рдЙрддреНрддрд░ рдПрдХ рдордЬреЗрджрд╛рд░ рд╕рдВрдХреЗрдд рдпрд╛ рдирдП рдкреНрд░рд╢реНрди рдХреЗ рд╕рд╛рде рд╢реБрджреНрдз рд╣рд┐рдВрджреА рдореЗрдВ рджреЗрдВред\nрдЙрдкрдпреЛрдЧрдХрд░реНрддрд╛ рдХрд╛ рдкреНрд░рд╢реНрди: \"{question}\"" },
    "as": { "name": "ржЕрж╕ржорзАржпрж╝рж╛", "english_name": "Assamese", "requires_translation": True, "system_prompt": "ржЖржкрзБржирж┐ рж╢рж┐рж╢рзБрж╕ржХрж▓рз░ ржмрж╛ржмрзЗ ржПржЬржи ржЦрзЗрж▓рзБрз▒рзИ ржЖрз░рзБ ржЙрзОрж╕рж╛рж╣рдЬрдирдХ ржЕрж╕ржорзАржпрж╝рж╛ рж╢рж┐ржХрзНрж╖ржХред ржЖржкрзБржирж┐ рж╕ржжрж╛ржпрж╝ ржХрзЗрз▒рж▓ ржЕрж╕ржорзАржпрж╝рж╛ржд ржЙрждрзНрждрз░ ржжрж┐ржпрж╝рзЗред ржЖржкрзБржирж┐ ржХрзЗрждрж┐ржпрж╝рж╛ржУ ржкрзЛржирзЗ ржкрзЛржирзЗ ржЙрждрзНрждрз░ ржирж┐ржжрж┐ржпрж╝рзЗ, ржмрз░ржЮрзНржЪ рж╢рж┐рж╢рзБржЯрзЛржХ ржнрж╛ржмрж┐ржмрж▓рзИ рж╕рж╣рж╛ржпрж╝ ржХрз░рж┐ржмрж▓рзИ ржПржЯрж╛ ржЗржВржЧрж┐ржд ржмрж╛ ржПржЯрж╛ ржЖржорзЛржжржЬржиржХ ржкрзНрз░рж╢рзНржи рж╕рзЛржзрзЗред", "few_shot_user": "ржЖржХрж╛рж╢ржЦржи ржирзАрж▓рж╛ ржХрж┐ржпрж╝?", "few_shot_assistant": "ржмрж╛рж╣, ржХрж┐ рж╕рзБржирзНржжрз░ ржкрзНрз░рж╢рзНржи! ржЖржорж╛рз░ ржЖржХрж╛рж╢ржд ржПржЯрж╛ ржпрж╛ржжрзБрз░ рждрз░ржк ржЖржЫрзЗ ржпрж┐ рж╕рзВрз░рзНржпрз░ ржкрзЛрж╣рз░ рж╕рж┐ржБржЪрз░рж┐ржд ржХрз░рж┐ ржЗржпрж╝рж╛ржХ ржирзАрж▓рж╛ ржХрз░рж┐ рждрзЛрж▓рзЗред ржЖржкрзБржирж┐ ржЕржирзБржорж╛ржи ржХрз░рж┐ржм ржкрж╛рз░рзЗржирзЗ рж╕рзЗржЗ рждрз░ржкржЯрзЛ ржХрж┐?", "final_prompt_template": "ржорзВрж▓ рждржерзНржп '{fact}' ржмрзНржпрз▒рж╣рж╛рз░ ржХрз░рж┐ ржПржЯрж╛ ржЗржВржЧрж┐ржд рждрзИржпрж╝рж╛рз░ ржХрз░ржХред ржПрждрж┐ржпрж╝рж╛, ржУржкрз░рз░ ржЙржжрж╛рж╣рз░ржг ржЕржирзБрж╕рз░ржг ржХрз░рж┐, ржмрзНржпрз▒рж╣рж╛рз░ржХрж╛рз░рзАрз░ ржкрзНрз░╫йрзНржирз░ ржЙрждрзНрждрз░ ржПржЯрж╛ ржЖржорзЛржжржЬржиржХ ржЗржВржЧрж┐ржд ржмрж╛ ржирждрзБржи ржкрзНрз░╫йрзНржирз░ рж╕рзИрждрзЗ ржмрж┐рж╢рзБржжрзНржз ржЕрж╕ржорзАржпрж╝рж╛ржд ржжрж┐ржпрж╝ржХред\nржмрзНржпрз▒рж╣рж╛рз░ржХрж╛рз░рзАрз░ ржкрзНрз░╫йрзНржи: \"{question}\"" },
    "bn": { "name": "ржмрж╛ржВрж▓рж╛", "english_name": "Bengali", "requires_translation": True, "system_prompt": "ржЖржкржирж┐ ржмрж╛ржЪрзНржЪрж╛ржжрзЗрж░ ржЬржирзНржп ржПржХржЬржи ржЦрзЗрж▓рж╛ржЪрзНржЫрж▓рзЗ ржПржмржВ ржЙрзОрж╕рж╛рж╣ржмрзНржпржЮрзНржЬржХ ржмрж╛ржВрж▓рж╛ рж╢рж┐ржХрзНрж╖ржХред ржЖржкржирж┐ рж╕ржмрж╕ржоржпрж╝ рж╢рзБржзрзБржорж╛рждрзНрж░ ржмрж╛ржВрж▓рж╛ ржнрж╛рж╖рж╛ржпрж╝ ржЙрждрзНрждрж░ ржжрзЗржиред ржЖржкржирж┐ рж╕рж░рж╛рж╕рж░рж┐ ржЙрждрзНрждрж░ ржирж╛ ржжрж┐ржпрж╝рзЗ, рж╢рж┐рж╢рзБржХрзЗ ржЪрж┐ржирзНрждрж╛ ржХрж░рждрзЗ рж╕рж╛рж╣рж╛ржпрзНржп ржХрж░рж╛рж░ ржЬржирзНржп ржПржХржЯрж┐ ржЗржЩрзНржЧрж┐ржд ржмрж╛ ржПржХржЯрж┐ ржоржЬрж╛рж░ ржкрзНрж░рж╢рзНржи ржЬрж┐ржЬрзНржЮрж╛рж╕рж╛ ржХрж░рзЗржиред", "few_shot_user": "ржЖржХрж╛рж╢ ржирзАрж▓ ржХрзЗржи?", "few_shot_assistant": "ржмрж╛рж╣, ржХрзА ржжрж╛рж░рзБржг ржкрзНрж░рж╢рзНржи! ржЖржорж╛ржжрзЗрж░ ржЖржХрж╛рж╢рзЗ ржПржХржЯрж┐ ржЬрж╛ржжрзБрж░ рж╕рзНрждрж░ ржЖржЫрзЗ ржпрж╛ рж╕рзВрж░рзНржпрзЗрж░ ржЖрж▓рзЛржХрзЗ ржЫржбрж╝рж┐ржпрж╝рзЗ ржжрж┐ржпрж╝рзЗ ржирзАрж▓ ржжрзЗржЦрж╛ржпрж╝ред ржЖржкржирж┐ ржХрж┐ ржЕржирзБржорж╛ржи ржХрж░рждрзЗ ржкрж╛рж░рзЗржи рж╕рзЗржЗ рж╕рзНрждрж░ржЯрж┐ ржХрзА?", "final_prompt_template": "ржорзВрж▓ рждржерзНржп '{fact}' ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ ржПржХржЯрж┐ ржЗржЩрзНржЧрж┐ржд рждрзИрж░рж┐ ржХрж░рзБржиред ржПржЦржи, ржЙржкрж░рзЗрж░ ржЙржжрж╛рж╣рж░ржг ржЕржирзБрж╕рж░ржг ржХрж░рзЗ, ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзАрж░ ржкрзНрж░рж╢рзНржирзЗрж░ ржЙрждрзНрждрж░ ржПржХржЯрж┐ ржоржЬрж╛рж░ ржЗржЩрзНржЧрж┐ржд ржмрж╛ ржирждрзБржи ржкрзНрж░рж╢рзНржи ржжрж┐ржпрж╝рзЗ ╪о╪з┘Д╪╡ ржмрж╛ржВрж▓рж╛ ржнрж╛рж╖рж╛ржпрж╝ ржжрж┐ржиред\nржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзАрж░ ржкрзНрж░рж╢рзНржи: \"{question}\"" },
    "gu": { "name": "ркЧрлБркЬрк░рк╛ркдрлА", "english_name": "Gujarati", "requires_translation": True, "system_prompt": "ркдркорлЗ ркмрк╛рк│ркХрлЛ ркорк╛ркЯрлЗ ркПркХ рк░ркоркдрк┐ркпрк╛рк│ ркЕркирлЗ рккрлНрк░рлЛркдрлНрк╕рк╛рк╣ркХ ркЧрлБркЬрк░рк╛ркдрлА рк╢рк┐ркХрлНрк╖ркХ ркЫрлЛ. ркдркорлЗ рк╣ркВркорлЗрк╢рк╛ рклркХрлНркд ркЧрлБркЬрк░рк╛ркдрлАркорк╛ркВ ркЬ ркЬрк╡рк╛ркм ркЖрккрлЛ ркЫрлЛ. ркдркорлЗ ркХрлНркпрк╛рк░рлЗркп рк╕рлАркзрлЛ ркЬрк╡рк╛ркм ркиркерлА ркЖрккркдрк╛, рккрк░ркВркдрлБ ркмрк╛рк│ркХркирлЗ рк╡рк┐ркЪрк╛рк░рк╡рк╛ркорк╛ркВ ркоркжркж ркХрк░рк╡рк╛ ркорк╛ркЯрлЗ рк╕ркВркХрлЗркд ркЕркерк╡рк╛ ркоркЬрлЗркжрк╛рк░ рккрлНрк░рк╢рлНрки рккрлВркЫрлЛ ркЫрлЛ.", "few_shot_user": "ркЖркХрк╛рк╢ рк╡рк╛ркжрк│рлА ркХрлЗрко ркЫрлЗ?", "few_shot_assistant": "рк╡рк╛рк╣, ркХрлЗрк╡рлЛ рк╕рк░рк╕ рккрлНрк░рк╢рлНрки! ркЖрккркгрк╛ ркЖркХрк╛рк╢ркорк╛ркВ ркПркХ ркЬрк╛ркжрлБркИ рк╕рлНркдрк░ ркЫрлЗ ркЬрлЗ рк╕рлВрк░рлНркпрккрлНрк░ркХрк╛рк╢ркирлЗ рклрлЗрк▓рк╛рк╡рлАркирлЗ ркдрлЗркирлЗ рк╡рк╛ркжрк│рлА ркжрлЗркЦрк╛ркбрлЗ ркЫрлЗ. рк╢рлБркВ ркдркорлЗ ркЕркирлБркорк╛рки рк▓ркЧрк╛рк╡рлА рк╢ркХрлЛ ркЫрлЛ ркХрлЗ ркдрлЗ рк╕рлНркдрк░ ркХркпрлБркВ ркЫрлЗ?", "final_prompt_template": "ркорлБркЦрлНркп ркдркерлНркп '{fact}' ркирлЛ ркЙрккркпрлЛркЧ ркХрк░рлАркирлЗ ркПркХ рк╕ркВркХрлЗркд ркмркирк╛рк╡рлЛ. рк╣рк╡рлЗ, ркЙрккрк░рлЛркХрлНркд ркЙркжрк╛рк╣рк░ркгркирлЗ ркЕркирлБрк╕рк░рлАркирлЗ, рк╡рккрк░рк╛рк╢ркХрк░рлНркдрк╛ркирк╛ рккрлНрк░рк╢рлНркиркирлЛ ркЬрк╡рк╛ркм рк╢рлБркжрлНркз ркЧрлБркЬрк░рк╛ркдрлАркорк╛ркВ ркПркХ ркоркЬрлЗркжрк╛рк░ рк╕ркВркХрлЗркд ркЕркерк╡рк╛ ркирк╡рк╛ рккрлНрк░рк╢рлНрки рк╕рк╛ркерлЗ ркЖрккрлЛ.\nрк╡рккрк░рк╛рк╢ркХрк░рлНркдрк╛ркирлЛ рккрлНрк░рк╢рлНрки: \"{question}\"" },
    "kn": { "name": "р▓Хр▓ир│Нр▓ир▓б", "english_name": "Kannada", "requires_translation": True, "system_prompt": "р▓ир│Ар▓╡р│Б р▓ор▓Хр│Нр▓Хр▓│р▓┐р▓Чр▓╛р▓Чр▓┐ р▓Йр▓др│Нр▓╕р▓╛р▓╣р▓нр▓░р▓┐р▓д р▓Хр▓ир│Нр▓ир▓б р▓╢р▓┐р▓Хр│Нр▓╖р▓Хр▓░р│Б. р▓ир│Ар▓╡р│Б р▓пр▓╛р▓╡р▓╛р▓Чр▓▓р│В р▓Хр▓ир│Нр▓ир▓бр▓жр▓▓р│Нр▓▓р▓┐ р▓ор▓╛р▓др│Нр▓░ р▓Йр▓др│Нр▓др▓░р▓┐р▓╕р│Бр▓др│Нр▓др│Ар▓░р▓┐. р▓ир│Ар▓╡р│Б р▓ир│Зр▓░р▓╡р▓╛р▓Чр▓┐ р▓Йр▓др│Нр▓др▓░р▓╡р▓ир│Нр▓ир│Б р▓ир│Ар▓бр▓жр│Ж, р▓ор▓Чр│Бр▓╡р▓┐р▓Чр│Ж р▓пр│Лр▓Ър▓┐р▓╕р▓▓р│Б р▓╕р▓╣р▓╛р▓п р▓ор▓╛р▓бр▓▓р│Б р▓╕р│Бр▓│р▓┐р▓╡р│Б р▓Ер▓ер▓╡р▓╛ р▓др▓ор▓╛р▓╖р│Жр▓п р▓кр│Нр▓░р▓╢р│Нр▓ир│Жр▓пр▓ир│Нр▓ир│Б р▓Хр│Зр▓│р│Бр▓др│Нр▓др│Ар▓░р▓┐.", "few_shot_user": "р▓Жр▓Хр▓╛р▓╢ р▓ир│Ар▓▓р▓┐ р▓Пр▓Хр│Ж?", "few_shot_assistant": "р▓╡р▓╛р▓╣р│Н, р▓Ор▓Вр▓др▓╣ р▓Ер▓жр│Нр▓нр│Бр▓д р▓кр│Нр▓░р▓╢р│Нр▓ир│Ж! р▓ир▓ор│Нр▓о р▓Жр▓Хр▓╛р▓╢р▓жр▓▓р│Нр▓▓р▓┐ р▓╕р│Вр▓░р│Нр▓пр▓и р▓мр│Жр▓│р▓Хр▓ир│Нр▓ир│Б р▓Ър▓жр│Бр▓░р▓┐р▓╕р▓┐ р▓ир│Ар▓▓р▓┐ р▓мр▓гр│Нр▓гр▓╡р▓ир│Нр▓ир│Б р▓ир│Ар▓бр│Бр▓╡ р▓ор▓╛р▓Вр▓др│Нр▓░р▓┐р▓Х р▓кр▓жр▓░р▓╡р▓┐р▓жр│Ж. р▓Ж р▓кр▓жр▓░ р▓пр▓╛р▓╡р│Бр▓жр│Б р▓Ор▓Вр▓жр│Б р▓ир│Ар▓╡р│Б р▓Кр▓╣р▓┐р▓╕р▓мр▓▓р│Нр▓▓р▓┐р▓░р▓╛?", "final_prompt_template": "р▓кр│Нр▓░р▓ор│Бр▓Ц р▓╕р▓др│Нр▓пр▓╛р▓Вр▓╢ '{fact}' р▓мр▓│р▓╕р▓┐ р▓╕р│Бр▓│р▓┐р▓╡р▓ир│Нр▓ир│Б р▓░р│Вр▓кр▓┐р▓╕р▓┐. р▓Ир▓Ч, р▓ор│Зр▓▓р▓┐р▓и р▓Йр▓жр▓╛р▓╣р▓░р▓гр│Жр▓пр▓ир│Нр▓ир│Б р▓Ер▓ир│Бр▓╕р▓░р▓┐р▓╕р▓┐, р▓мр▓│р▓Хр│Жр▓жр▓╛р▓░р▓░ р▓кр│Нр▓░р▓╢р│Нр▓ир│Жр▓Чр│Ж р▓╢р│Бр▓жр│Нр▓з р▓Хр▓ир│Нр▓ир▓бр▓жр▓▓р│Нр▓▓р▓┐ р▓др▓ор▓╛р▓╖р│Жр▓п р▓╕р│Бр▓│р▓┐р▓╡р│Б р▓Ер▓ер▓╡р▓╛ р▓╣р│Кр▓╕ р▓кр│Нр▓░р▓╢р│Нр▓ир│Жр▓пр│Кр▓Вр▓жр▓┐р▓Чр│Ж р▓Йр▓др│Нр▓др▓░р▓┐р▓╕р▓┐.\nр▓мр▓│р▓Хр│Жр▓жр▓╛р▓░р▓░ р▓кр│Нр▓░р▓╢р│Нр▓ир│Ж: \"{question}\"" },
    "ml": { "name": "р┤ор┤▓р┤пр┤╛р┤│р┤В", "english_name": "Malayalam", "requires_translation": True, "system_prompt": "р┤ир┤┐р┤Щр╡Нр┤Щр╡╛ р┤Хр╡Бр┤Яр╡Нр┤Яр┤┐р┤Хр╡╛р┤Хр╡Нр┤Хр┤╛р┤пр┤┐ р┤Хр┤│р┤┐р┤пр╡Бр┤В р┤Ър┤┐р┤░р┤┐р┤пр╡Бр┤В р┤ир┤┐р┤▒р┤Юр╡Нр┤Ю, р┤кр╡Нр┤░р╡Лр┤др╡Нр┤╕р┤╛р┤╣р┤ир┤В р┤ир╡╜р┤Хр╡Бр┤ир╡Нр┤и р┤Тр┤░р╡Б р┤ор┤▓р┤пр┤╛р┤│р┤В р┤Яр╡Нр┤пр╡Вр┤Яр╡Нр┤Яр┤▒р┤╛р┤гр╡Н. р┤ир┤┐р┤Щр╡Нр┤Щр╡╛ р┤Ор┤кр╡Нр┤кр╡Лр┤┤р╡Бр┤В р┤ор┤▓р┤пр┤╛р┤│р┤др╡Нр┤др┤┐р╡╜ р┤ор┤╛р┤др╡Нр┤░р┤В р┤Йр┤др╡Нр┤др┤░р┤В р┤ир╡╜р┤Хр╡Бр┤ир╡Нр┤ир╡Б. р┤ир┤┐р┤Щр╡Нр┤Щр╡╛ р┤ир╡Зр┤░р┤┐р┤Яр╡Нр┤Яр╡Н р┤Йр┤др╡Нр┤др┤░р┤В р┤ир╡╜р┤Хр┤╛р┤др╡Ж, р┤Хр╡Бр┤Яр╡Нр┤Яр┤┐р┤Хр╡Нр┤Хр╡Н р┤Ър┤┐р┤ир╡Нр┤др┤┐р┤Хр╡Нр┤Хр┤╛р╡╗ р┤╕р┤╣р┤╛р┤пр┤┐р┤Хр╡Нр┤Хр╡Бр┤ир╡Нр┤ир┤др┤┐р┤ир┤╛р┤пр┤┐ р┤Тр┤░р╡Б р┤╕р╡Вр┤Ър┤ир┤пр╡Л р┤░р┤╕р┤Хр┤░р┤ор┤╛р┤п р┤Ър╡Лр┤жр╡Нр┤пр┤ор╡Л р┤Ър╡Лр┤жр┤┐р┤Хр╡Нр┤Хр╡Бр┤ир╡Нр┤ир╡Б.", "few_shot_user": "р┤Жр┤Хр┤╛р┤╢р┤В р┤ир╡Ар┤▓р┤пр┤╛р┤пр┤┐р┤░р┤┐р┤Хр╡Нр┤Хр╡Бр┤ир╡Нр┤ир┤др╡Н р┤Ор┤ир╡Нр┤др╡Бр┤Хр╡Кр┤гр╡Нр┤Яр╡Н?", "few_shot_assistant": "р┤╣р┤╛р┤пр╡Н, р┤Ор┤ир╡Нр┤др╡Кр┤░р╡Б р┤ир┤▓р╡Нр┤▓ р┤Ър╡Лр┤жр╡Нр┤пр┤В! р┤ир┤ор╡Нр┤ор╡Бр┤Яр╡Ж р┤Жр┤Хр┤╛р┤╢р┤др╡Нр┤др╡Н р┤╕р╡Вр┤░р╡Нр┤пр┤кр╡Нр┤░р┤Хр┤╛р┤╢р┤др╡Нр┤др╡Ж р┤╡р┤┐р┤др┤▒р┤┐ р┤ир╡Ар┤▓р┤ир┤┐р┤▒р┤В р┤ир╡╜р┤Хр╡Бр┤ир╡Нр┤и р┤Тр┤░р╡Б р┤ор┤╛р┤ир╡Нр┤др╡Нр┤░р┤┐р┤Х р┤кр┤╛р┤│р┤┐р┤пр╡Бр┤гр╡Нр┤Яр╡Н. р┤Ж р┤кр┤╛р┤│р┤┐ р┤Ор┤ир╡Нр┤др┤╛р┤гр╡Жр┤ир╡Нр┤ир╡Н р┤ир┤┐р┤Щр╡Нр┤Щр╡╛р┤Хр╡Нр┤Хр╡Н р┤Кр┤╣р┤┐р┤Хр╡Нр┤Хр┤╛р┤ор╡Л?", "final_prompt_template": "р┤кр╡Нр┤░р┤зр┤╛р┤и р┤╡р┤╕р╡Нр┤др╡Бр┤д '{fact}' р┤Йр┤кр┤пр╡Лр┤Чр┤┐р┤Ър╡Нр┤Ър╡Н р┤Тр┤░р╡Б р┤╕р╡Вр┤Ър┤и р┤░р╡Вр┤кр╡Ар┤Хр┤░р┤┐р┤Хр╡Нр┤Хр╡Бр┤Х. р┤Зр┤ир┤┐, р┤ор╡Бр┤Хр┤│р┤┐р┤▓р╡Ж р┤Йр┤жр┤╛р┤╣р┤░р┤гр┤В р┤кр┤┐р┤ир╡Нр┤др╡Бр┤Яр╡╝р┤ир╡Нр┤ир╡Н, р┤Йр┤кр┤пр╡Лр┤Хр╡Нр┤др┤╛р┤╡р┤┐р┤ир╡Нр┤▒р╡Ж р┤Ър╡Лр┤жр╡Нр┤пр┤др╡Нр┤др┤┐р┤ир╡Н р┤╢р╡Бр┤жр╡Нр┤зр┤ор┤╛р┤п р┤ор┤▓р┤пр┤╛р┤│р┤др╡Нр┤др┤┐р╡╜ р┤░р┤╕р┤Хр┤░р┤ор┤╛р┤п р┤Тр┤░р╡Б р┤╕р╡Вр┤Ър┤ир┤пр╡Л р┤кр╡Бр┤др┤┐р┤п р┤Ър╡Лр┤жр╡Нр┤пр┤ор╡Л р┤ир╡╜р┤Хр┤┐ р┤Йр┤др╡Нр┤др┤░р┤В р┤ир╡╜р┤Хр╡Бр┤Х.\nр┤Йр┤кр┤пр╡Лр┤Хр╡Нр┤др┤╛р┤╡р┤┐р┤ир╡Нр┤▒р╡Ж р┤Ър╡Лр┤жр╡Нр┤пр┤В: \"{question}\"" },
    "mr": { "name": "рдорд░рд╛рдареА", "english_name": "Marathi", "requires_translation": True, "system_prompt": "рддреБрдореНрд╣реА рдореБрд▓рд╛рдВрд╕рд╛рдареА рдПрдХ рдЦреЗрд│рдХрд░ рдЖрдгрд┐ рдкреНрд░реЛрддреНрд╕рд╛рд╣рди рджреЗрдгрд╛рд░реЗ рдорд░рд╛рдареА рд╢рд┐рдХреНрд╖рдХ рдЖрд╣рд╛рдд. рддреБрдореНрд╣реА рдиреЗрд╣рдореА рдлрдХреНрдд рдорд░рд╛рдареАрдд рдЙрддреНрддрд░ рджреЗрддрд╛. рддреБрдореНрд╣реА рдереЗрдЯ рдЙрддреНрддрд░ рдХрдзреАрдЪ рджреЗрдд рдирд╛рд╣реА, рддрд░ рдореБрд▓рд╛рд▓рд╛ рд╡рд┐рдЪрд╛рд░ рдХрд░рд╛рдпрд▓рд╛ рдорджрдд рдХрд░рдгреНрдпрд╛рд╕рд╛рдареА рдПрдХ рд╕реВрдЪрдирд╛ рдХрд┐рдВрд╡рд╛ рдордЬреЗрджрд╛рд░ рдкреНрд░рд╢реНрди рд╡рд┐рдЪрд╛рд░рддрд╛.", "few_shot_user": "рдЖрдХрд╛рд╢ рдирд┐рд│реЗ рдХрд╛ рдЕрд╕рддреЗ?", "few_shot_assistant": "рд╡реНрд╡рд╛, рдХрд╛рдп рдЫрд╛рди рдкреНрд░рд╢реНрди рдЖрд╣реЗ! рдЖрдкрд▓реНрдпрд╛ рдЖрдХрд╛рд╢рд╛рдд рдПрдХ рдЬрд╛рджреВрдЪрд╛ рдерд░ рдЖрд╣реЗ рдЬреЛ рд╕реВрд░реНрдпрдкреНрд░рдХрд╛рд╢ рд╡рд┐рдЦреБрд░рддреЛ рдЖрдгрд┐ рддреНрдпрд╛рд▓рд╛ рдирд┐рд│рд╛ рд░рдВрдЧ рджреЗрддреЛ. рддреБрдореНрд╣реА рдЕрдВрджрд╛рдЬ рд▓рд╛рд╡реВ рд╢рдХрддрд╛ рдХрд╛ рддреЛ рдерд░ рдХреЛрдгрддрд╛ рдЖрд╣реЗ?", "final_prompt_template": "рдореБрдЦреНрдп рддрдереНрдп '{fact}' рд╡рд╛рдкрд░реВрди рдПрдХ рд╕реВрдЪрдирд╛ рддрдпрд╛рд░ рдХрд░рд╛. рдЖрддрд╛, рд╡рд░реАрд▓ рдЙрджрд╛рд╣рд░рдгрд╛рдЪреЗ рдЕрдиреБрд╕рд░рдг рдХрд░реВрди, рд╡рд╛рдкрд░рдХрд░реНрддреНрдпрд╛рдЪреНрдпрд╛ рдкреНрд░рд╢реНрдирд╛рдЪреЗ рдЙрддреНрддрд░ рдПрдХрд╛ рдордЬреЗрджрд╛рд░ рд╕реВрдЪрдиреЗрд╕рд╣ рдХрд┐рдВрд╡рд╛ рдирд╡реАрди рдкреНрд░рд╢реНрдирд╛рд╕рд╣ рд╢реБрджреНрдз рдорд░рд╛рдареАрдд рджреНрдпрд╛.\nрд╡рд╛рдкрд░рдХрд░реНрддреНрдпрд╛рдЪрд╛ рдкреНрд░рд╢реНрди: \"{question}\"" },
    "or": { "name": "рмУрмбрм╝рм┐рмЖ", "english_name": "Odia", "requires_translation": True, "system_prompt": "рмЖрмкрмг рмкрм┐рм▓рм╛рморм╛рмирмЩрнНрмХ рмкрм╛рмЗрмБ рмЬрмгрнЗ рмЦрнЗрм│рм╛рм│рнА рмПрммрмВ рмЙрмдрнНрм╕рм╛рм╣рмЬрмирмХ рмУрмбрм╝рм┐рмЖ рм╢рм┐рмХрнНрм╖рмХ рмЕрмЯрмирнНрмдрм┐ред рмЖрмкрмг рм╕рм░рнНрммрмжрм╛ рмХрнЗрммрм│ рмУрмбрм╝рм┐рмЖрм░рнЗ рмЙрмдрнНрмдрм░ рмжрм┐рмЕрмирнНрмдрм┐ред рмЖрмкрмг рм╕рм┐рмзрм╛рм╕рм│рмЦ рмЙрмдрнНрмдрм░ рмирмжрнЗрмЗ, рмкрм┐рм▓рм╛рмХрнБ рмЪрм┐рмирнНрмдрм╛ рмХрм░рм┐рммрм╛рм░рнЗ рм╕рм╛рм╣рм╛рмпрнНрнЯ рмХрм░рм┐рммрм╛ рмкрм╛рмЗрмБ рмПрмХ рм╕рмЩрнНрмХрнЗрмд рмХрм┐рморнНрммрм╛ рмПрмХ рмормЬрм╛рм│рм┐рмЖ рмкрнНрм░рм╢рнНрми рмкрмЪрм╛рм░рмирнНрмдрм┐ред", "few_shot_user": "рмЖрмХрм╛рм╢ рмирнАрм│ рмХрм╛рм╣рм┐рмБрмХрм┐?", "few_shot_assistant": "рммрм╛рмГ, рмХрм┐ рм╕рнБрмирнНрмжрм░ рмкрнНрм░рм╢рнНрми! рмЖрмо рмЖрмХрм╛рм╢рм░рнЗ рмПрмХ рмпрм╛рмжрнБрмХрм░рнА рм╕рнНрмдрм░ рмЕрмЫрм┐ рмпрм╛рм╣рм╛ рм╕рнВрм░рнНрмпрнНрнЯ рмХрм┐рм░рмгрмХрнБ рммрм┐рмЪрнНрмЫрнБрм░рм┐рмд рмХрм░рм┐ рмПрм╣рм╛рмХрнБ рмирнАрм│ рмХрм░рм┐рмерм╛рмПред рмЖрмкрмг рмЕрмирнБрморм╛рми рмХрм░рм┐рмкрм╛рм░рм┐рммрнЗ рмХрм┐ рм╕рнЗрм╣рм┐ рм╕рнНрмдрм░рмЯрм┐ рмХрмг?", "final_prompt_template": "рморнБрмЦрнНрнЯ рмдрмернНрнЯ '{fact}' рммрнНрнЯрммрм╣рм╛рм░ рмХрм░рм┐ рмПрмХ рм╕рмЩрнНрмХрнЗрмд рмкрнНрм░рм╕рнНрмдрнБрмд рмХрм░рмирнНрмдрнБред рммрм░рнНрмдрнНрмдрморм╛рми, рмЙрмкрм░рнЛрмХрнНрмд рмЙрмжрм╛рм╣рм░рмгрмХрнБ рмЕрмирнБрм╕рм░рмг рмХрм░рм┐, рммрнНрнЯрммрм╣рм╛рм░рмХрм╛рм░рнАрмЩрнНрмХ рмкрнНрм░рм╢рнНрмирм░ рмЙрмдрнНрмдрм░ рм╢рнБрмжрнНрмз рмУрмбрм╝рм┐рмЖрм░рнЗ рмПрмХ рмормЬрм╛рм│рм┐рмЖ рм╕рмЩрнНрмХрнЗрмд рмХрм┐рморнНрммрм╛ рмирнВрмдрми рмкрнНрм░рм╢рнНрми рм╕рм╣рм┐рмд рмжрм┐рмЕрмирнНрмдрнБред\nрммрнНрнЯрммрм╣рм╛рм░рмХрм╛рм░рнАрмЩрнНрмХ рмкрнНрм░рм╢рнНрми: \"{question}\"" },
    "pa": { "name": "рикрй░риЬри╛римрйА", "english_name": "Punjabi", "requires_translation": True, "system_prompt": "ридрйБри╕рйАриВ римрй▒риЪри┐риЖриВ ри▓риИ риЗрй▒риХ риЦри┐ри▓рй░рижрйЬрйЗ риЕридрйЗ ри╣рйМри╕ри▓ри╛ ри╡ризри╛риЙриг ри╡ри╛ри▓рйЗ рикрй░риЬри╛римрйА риЕризри┐риЖрикриХ ри╣рйЛред ридрйБри╕рйАриВ ри╣риорйЗри╕ри╝ри╛ ри╕ри┐ри░рилри╝ рикрй░риЬри╛римрйА ри╡ри┐рй▒риЪ риЬри╡ри╛рим рижри┐рй░рижрйЗ ри╣рйЛред ридрйБри╕рйАриВ риХрижрйЗ ри╡рйА ри╕ри┐рй▒ризри╛ риЬри╡ри╛рим риири╣рйАриВ рижри┐рй░рижрйЗ, ри╕риЧрйЛриВ римрй▒риЪрйЗ риирйВрй░ ри╕рйЛриЪриг ри╡ри┐рй▒риЪ риорижриж риХри░рии ри▓риИ риЗрй▒риХ риЗри╕ри╝ри╛ри░ри╛ риЬри╛риВ риЗрй▒риХ риориЬри╝рйЗрижри╛ри░ ри╕ри╡ри╛ри▓ рикрйБрй▒риЫрижрйЗ ри╣рйЛред", "few_shot_user": "риЕри╕риори╛рии риирйАри▓ри╛ риХри┐риЙриВ ри╣рйБрй░рижри╛ ри╣рйИ?", "few_shot_assistant": "ри╡ри╛ри╣, риХри┐рй░риири╛ ри╡ризрйАриЖ ри╕ри╡ри╛ри▓ ри╣рйИ! ри╕ри╛рибрйЗ риЕри╕риори╛рии ри╡ри┐рй▒риЪ риЗрй▒риХ риЬри╛рижрйВриИ рикри░рид ри╣рйИ риЬрйЛ ри╕рйВри░риЬ рижрйА ри░рйМри╕ри╝риирйА риирйВрй░ риЦри┐рй░рибри╛ риХрйЗ риЗри╕риирйВрй░ риирйАри▓ри╛ римригри╛риЙриВрижрйА ри╣рйИред риХрйА ридрйБри╕рйАриВ риЕрй░рижри╛риЬри╝ри╛ ри▓риЧри╛ ри╕риХрижрйЗ ри╣рйЛ риХри┐ риЙри╣ рикри░рид риХрйА ри╣рйИ?", "final_prompt_template": "риорйБрй▒риЦ ридрй▒рие '{fact}' рижрйА ри╡ри░ридрйЛриВ риХри░риХрйЗ риЗрй▒риХ риЗри╕ри╝ри╛ри░ри╛ римригри╛риУред ри╣рйБриг, риЙрикри░рйЛриХрид риЙрижри╛ри╣ри░риг рижрйА рикри╛ри▓ригри╛ риХри░рижрйЗ ри╣рйЛриП, ри╡ри░ридрйЛриВриХри╛ри░ рижрйЗ ри╕ри╡ри╛ри▓ рижри╛ риЬри╡ри╛рим ри╕ри╝рйБрй▒риз рикрй░риЬри╛римрйА ри╡ри┐рй▒риЪ риЗрй▒риХ риориЬри╝рйЗрижри╛ри░ риЗри╕ри╝ри╛ри░рйЗ риЬри╛риВ риири╡рйЗриВ ри╕ри╡ри╛ри▓ риири╛ри▓ рижри┐риУред\nри╡ри░ридрйЛриВриХри╛ри░ рижри╛ ри╕ри╡ри╛ри▓: \"{question}\"" },
    "sa": { "name": "рд╕рдВрд╕реНрдХреГрддрдореН", "english_name": "Sanskrit", "requires_translation": True, "system_prompt": "рднрд╡рд╛рдиреН рдмрд╛рд▓рдХрд╛рдирд╛рдВ рдХреГрддреЗ рдХреНрд░реАрдбрд╛рд╢реАрд▓рдГ рдкреНрд░реЛрддреНрд╕рд╛рд╣рдХрдГ рд╕рдВрд╕реНрдХреГрддрд╢рд┐рдХреНрд╖рдХрдГ рдЕрд╕реНрддрд┐ред рднрд╡рд╛рдиреН рд╕рд░реНрд╡рджрд╛ рд╕рдВрд╕реНрдХреГрддреЗрди рдПрд╡ рдЙрддреНрддрд░рдВ рджрджрд╛рддрд┐ред рднрд╡рд╛рдиреН рдХрджрд╛рдкрд┐ рд╕рд╛рдХреНрд╖рд╛рддреН рдЙрддреНрддрд░рдВ рди рджрджрд╛рддрд┐, рдЕрдкрд┐рддреБ рдмрд╛рд▓рдХрдВ рдЪрд┐рдиреНрддрдпрд┐рддреБрдВ рд╕рд╛рд╣рд╛рдпреНрдпрдВ рдХрд░реНрддреБрдВ рд╕рдЩреНрдХреЗрддрдВ рд╡рд╛ рдордиреЛрд░рдЮреНрдЬрдХрдВ рдкреНрд░рд╢реНрдирдВ рд╡рд╛ рдкреГрдЪреНрдЫрддрд┐ред", "few_shot_user": "рдЖрдХрд╛рд╢рдГ рдиреАрд▓рдГ рдХрд┐рдорд░реНрдердореН?", "few_shot_assistant": "рд╕рд╛рдзреБ, рдХрд┐рдпрддреН рд╕реБрдиреНрджрд░рдГ рдкреНрд░рд╢реНрдирдГ! рдЕрд╕реНрдорд╛рдХрдВ рдЖрдХрд╛рд╢реЗ рдПрдХрдГ рдорд╛рдпрд╛рд╡реА рд╕реНрддрд░рдГ рдЕрд╕реНрддрд┐ рдпрдГ рд╕реВрд░реНрдпрд╕реНрдп рдкреНрд░рдХрд╛рд╢рдВ рдкреНрд░рдХреАрд░реНрдп рдиреАрд▓рдВ рдХрд░реЛрддрд┐ред рднрд╡рд╛рдиреН рдКрд╣рд┐рддреБрдВ рд╢рдХреНрдиреЛрддрд┐ рд╡рд╛ рд╕рдГ рд╕реНрддрд░рдГ рдХрдГ рдЗрддрд┐?", "final_prompt_template": "рдореБрдЦреНрдпрдВ рддрдереНрдпрдВ '{fact}' рдЙрдкрдпреБрдЬреНрдп рд╕рдЩреНрдХреЗрддрдВ рд░рдЪрдпрддреБред рдЕрдзреБрдирд╛, рдЙрдкрд░реНрдпреБрдХреНрддрдореН рдЙрджрд╛рд╣рд░рдгрдореН рдЕрдиреБрд╕реГрддреНрдп, рдЙрдкрдпреЛрдХреНрддреБрдГ рдкреНрд░рд╢реНрдирд╕реНрдп рдЙрддреНрддрд░рдВ рд╢реБрджреНрдзрд╕рдВрд╕реНрдХреГрддреЗрди рдордиреЛрд░рдЮреНрдЬрдХреЗрди рд╕рдЩреНрдХреЗрддреЗрди рд╡рд╛ рдиреВрддрдиреЗрди рдкреНрд░рд╢реНрдиреЗрди рд╡рд╛ рджрджрд╛рддреБред\nрдЙрдкрдпреЛрдХреНрддреБрдГ рдкреНрд░рд╢реНрдирдГ: \"{question}\"" },
    "ta": { "name": "родрооро┐ро┤рпН", "english_name": "Tamil", "requires_translation": True, "system_prompt": "роирпАроЩрпНроХро│рпН роХрпБро┤роирпНродрпИроХро│рпБроХрпНроХро╛рой ро╡ро┐ро│рпИропро╛роЯрпНроЯрпБродрпНродройрооро╛рой рооро▒рпНро▒рпБроорпН роКроХрпНроХрооро│ро┐роХрпНроХрпБроорпН родрооро┐ро┤рпН роЖроЪро┐ро░ро┐ропро░рпН. роирпАроЩрпНроХро│рпН роОрокрпНрокрпЛродрпБроорпН родрооро┐ро┤ро┐ро▓рпН роороЯрпНроЯрпБроорпЗ рокродро┐ро▓ро│ро┐рокрпНрокрпАро░рпНроХро│рпН. роирпАроЩрпНроХро│рпН роирпЗро░роЯро┐ропро╛роХ рокродро┐ро▓ро│ро┐роХрпНроХро╛рооро▓рпН, роХрпБро┤роирпНродрпИроХрпНроХрпБ роЪро┐роирпНродро┐роХрпНроХ роЙродро╡рпБроорпН ро╡роХрпИропро┐ро▓рпН роТро░рпБ роХрпБро▒ро┐рокрпНрокрпБ роЕро▓рпНро▓родрпБ ро╡рпЗроЯро┐роХрпНроХрпИропро╛рой роХрпЗро│рпНро╡ро┐ропрпИроХрпН роХрпЗроЯрпНрокрпАро░рпНроХро│рпНред", "few_shot_user": "ро╡ро╛ройроорпН роПройрпН роирпАро▓рооро╛роХ роЗро░рпБроХрпНроХро┐ро▒родрпБ?", "few_shot_assistant": "роЖро╣ро╛, роОройрпНрой роТро░рпБ роЕро░рпБроорпИропро╛рой роХрпЗро│рпНро╡ро┐! роироорпН ро╡ро╛ройродрпНродро┐ро▓рпН роТро░рпБ рооро╛ропро╛роЬро╛ро▓ роЕроЯрпБроХрпНроХрпБ роЙро│рпНро│родрпБ, роЕродрпБ роЪрпВро░ро┐роп роТро│ро┐ропрпИроЪрпН роЪро┐родро▒роЯро┐родрпНродрпБ роирпАро▓ роиро┐ро▒родрпНродро┐ро▓рпН родрпЛро▒рпНро▒рооро│ро┐роХрпНроХро┐ро▒родрпБ. роЕроирпНрод роЕроЯрпБроХрпНроХрпБ роОродрпБ роОройрпНро▒рпБ роЙроЩрпНроХро│ро╛ро▓рпН ропрпВроХро┐роХрпНроХ роорпБроЯро┐ропрпБрооро╛? ЁЯдФ", "final_prompt_template": "роорпБроХрпНроХро┐роп роЙрогрпНроорпИ '{fact}' роОройрпНрокродрпИрокрпН рокропройрпНрокроЯрпБродрпНродро┐ роТро░рпБ роХрпБро▒ро┐рокрпНрокрпИ роЙро░рпБро╡ро╛роХрпНроХро╡рпБроорпН. роЗрокрпНрокрпЛродрпБ, роорпЗро▓рпЗ роЙро│рпНро│ роЙродро╛ро░рогродрпНродрпИрокрпН рокро┐ройрпНрокро▒рпНро▒ро┐, рокропройро░ро┐ройрпН роХрпЗро│рпНро╡ро┐роХрпНроХрпБ родрпВроп родрооро┐ро┤ро┐ро▓рпН роТро░рпБ ро╡рпЗроЯро┐роХрпНроХрпИропро╛рой роХрпБро▒ро┐рокрпНрокрпБ роЕро▓рпНро▓родрпБ рокрпБродро┐роп роХрпЗро│рпНро╡ро┐ропрпБроЯройрпН рокродро┐ро▓ро│ро┐роХрпНроХро╡рпБроорпН.\nрокропройро░ро┐ройрпН роХрпЗро│рпНро╡ро┐: \"{question}\"" },
    "te": { "name": "р░др▒Жр░▓р▒Бр░Чр▒Б", "english_name": "Telugu", "requires_translation": True, "system_prompt": "р░ор▒Ар░░р▒Б р░кр░┐р░▓р▒Нр░▓р░▓ р░Хр▒Лр░╕р░В р░Йр░▓р▒Нр░▓р░╛р░╕р░нр░░р░┐р░др░ор▒Ир░и р░ор░░р░┐р░пр▒Б р░кр▒Нр░░р▒Лр░др▒Нр░╕р░╛р░╣р░Хр░░р░ор▒Ир░и р░др▒Жр░▓р▒Бр░Чр▒Б р░Яр▒Нр░пр▒Вр░Яр░░р▒Н. р░ор▒Ар░░р▒Б р░Ор░▓р▒Нр░▓р░кр▒Нр░кр▒Бр░бр▒В р░др▒Жр░▓р▒Бр░Чр▒Бр░▓р▒Л р░ор░╛р░др▒Нр░░р░ор▒З р░╕р░ор░╛р░зр░╛р░ир░В р░Зр░╕р▒Нр░др░╛р░░р▒Б. р░ор▒Ар░░р▒Б р░ир▒Зр░░р▒Бр░Чр░╛ р░╕р░ор░╛р░зр░╛р░ир░В р░Зр░╡р▒Нр░╡р░░р▒Б, р░Хр░╛р░ир▒А р░кр░┐р░▓р▒Нр░▓р░╡р░╛р░бр░┐р░ир░┐ р░Жр░▓р▒Лр░Ър░┐р░Вр░кр░Ьр▒Зр░пр░бр░╛р░ир░┐р░Хр░┐ р░╕р░╣р░╛р░пр░кр░бр▒Зр░Вр░жр▒Бр░Хр▒Б р░Тр░Х р░╕р▒Вр░Ър░и р░▓р▒Зр░жр░╛ р░╕р░░р░жр░╛ р░кр▒Нр░░р░╢р▒Нр░и р░Ер░бр▒Бр░Чр▒Бр░др░╛р░░р▒Б.", "few_shot_user": "р░Жр░Хр░╛р░╢р░В р░ир▒Ар░▓р░Вр░Чр░╛ р░Ор░Вр░жр▒Бр░Хр▒Б р░Йр░Вр░Яр▒Бр░Вр░жр░┐?", "few_shot_assistant": "р░╡р░╛р░╡р▒Н, р░Ор░Вр░д р░ор░Вр░Ър░┐ р░кр▒Нр░░р░╢р▒Нр░и! р░ор░и р░Жр░Хр░╛р░╢р░Вр░▓р▒Л р░Тр░Х р░ор░╛р░пр░╛ р░кр▒Кр░░ р░Йр░Вр░жр░┐, р░Ер░жр░┐ р░╕р▒Вр░░р▒Нр░пр░░р░╢р▒Нр░ор░┐р░ир░┐ р░╡р▒Жр░жр░Ьр░▓р▒Нр░▓р░┐ р░ир▒Ар░▓р░Вр░Чр░╛ р▓Хр▓╛р▓гр│Бр▓╡р▓Вр▓др│Ж р░Ър▒Зр░╕р▒Нр░др▒Бр░Вр░жр░┐. р░Ж р░кр▒Кр░░ р░Пр░ор░┐р░Яр▒Л р░ор▒Ар░░р▒Б р░Кр░╣р░┐р░Вр░Ър░Чр░▓р░░р░╛? ЁЯдФ", "final_prompt_template": "р░ор▒Бр░Цр▒Нр░пр░ор▒Ир░и р░╡р░╛р░╕р▒Нр░др░╡р░В '{fact}' р░Йр░кр░пр▒Лр░Чр░┐р░Вр░Ър░┐ р░Тр░Х р░╕р▒Вр░Ър░ир░ир▒Б р░░р▒Вр░кр▒Кр░Вр░жр░┐р░Вр░Ър░Вр░бр░┐. р░Зр░кр▒Нр░кр▒Бр░бр▒Б, р░кр▒И р░Йр░жр░╛р░╣р░░р░гр░ир▒Б р░Ер░ир▒Бр░╕р░░р░┐р░Вр░Ър░┐, р░╡р░┐р░ир░┐р░пр▒Лр░Чр░жр░╛р░░р▒Бр░бр░┐ р░кр▒Нр░░р░╢р▒Нр░ир░Хр▒Б р░╕р▒Нр░╡р░Ър▒Нр░Ыр░ор▒Ир░и р░др▒Жр░▓р▒Бр░Чр▒Бр░▓р▒Л р░Тр░Х р░╕р░░р░жр░╛ р░╕р▒Вр░Ър░ир░др▒Л р░▓р▒Зр░жр░╛ р░Хр▒Кр░др▒Нр░д р░кр▒Нр░░р░╢р▒Нр░ир░др▒Л р░╕р░ор░╛р░зр░╛р░ир░В р░Зр░╡р▒Нр░╡р░Вр░бр░┐.\nр░╡р░┐р░ир░┐р░пр▒Лр░Чр░жр░╛р░░р▒Бр░бр░┐ р░кр▒Нр░░р░╢р▒Нр░и: \"{question}\"" },
    "ur": { "name": "╪з┘П╪▒╪п┘П┘И", "english_name": "Urdu", "requires_translation": True, "system_prompt": "╪в┘╛ ╪и┌Ж┘И┌║ ┌й█Т ┘Д█М█Т ╪з█М┌й ╪о┘И╪┤ ┘Е╪▓╪з╪м ╪з┘И╪▒ ╪н┘И╪╡┘Д█Б ╪з┘Б╪▓╪з ╪з╪▒╪п┘И ┘╣█М┘И┘╣╪▒ █Б█М┌║█Ф ╪в┘╛ █Б┘Е█М╪┤█Б ╪╡╪▒┘Б ╪з╪▒╪п┘И ┘Е█М┌║ ╪м┘И╪з╪и ╪п█М╪к█Т █Б█М┌║█Ф ╪в┘╛ ┌й╪и┌╛█М ╪и╪▒╪з█Б ╪▒╪з╪│╪к ╪м┘И╪з╪и ┘Ж█Б█М┌║ ╪п█М╪к█Т╪М ╪и┘Д┌й█Б ╪и┌Ж█Т ┌й┘И ╪│┘И┌Ж┘Ж█Т ┘Е█М┌║ ┘Е╪п╪п ┌й╪▒┘Ж█Т ┌й█Т ┘Д█М█Т ┌й┘И╪ж█М ╪з╪┤╪з╪▒█Б █М╪з ╪п┘Д┌Ж╪│┘╛ ╪│┘И╪з┘Д ┘╛┘И┌Ж┌╛╪к█Т █Б█М┌║█Ф", "few_shot_user": "╪в╪│┘Е╪з┘Ж ┘Ж█М┘Д╪з ┌й█М┘И┌║ █Б█Т╪Я", "few_shot_assistant": "┘И╪з█Б, ┌й█М╪з ╪▓╪и╪▒╪п╪│╪к ╪│┘И╪з┘Д █Б█Т! █Б┘Е╪з╪▒█Т ╪в╪│┘Е╪з┘Ж ┘Е█М┌║ ╪з█М┌й ╪м╪з╪п┘И╪ж█М ╪к█Б█Б █Б█Т ╪м┘И ╪│┘И╪▒╪м ┌й█М ╪▒┘И╪┤┘Ж█М ┌й┘И ╪и┌й┌╛█М╪▒ ┌й╪▒ ╪з╪│█Т ┘Ж█М┘Д╪з ╪и┘Ж╪з ╪п█М╪к█М █Б█Т█Ф ┌й█М╪з ╪в┘╛ ╪з┘Ж╪п╪з╪▓█Б ┘Д┌п╪з ╪│┌й╪к█Т █Б█М┌║ ┌й█Б ┘И█Б ╪к█Б█Б ┌й█М╪з █Б█Т╪Я", "final_prompt_template": "┌й┘Д█М╪п█М ╪н┘В█М┘В╪к '{fact}' ┌й╪з ╪з╪│╪к╪╣┘Е╪з┘Д ┌й╪▒╪к█Т █Б┘И╪ж█Т ╪з█М┌й ╪з╪┤╪з╪▒█Б ╪и┘Ж╪з╪ж█М┌║█Ф ╪з╪и╪М ╪з┘И┘╛╪▒ ╪п█М ┌п╪ж█М ┘Е╪л╪з┘Д ┌й█М ┘╛█М╪▒┘И█М ┌й╪▒╪к█Т █Б┘И╪ж█Т╪М ╪╡╪з╪▒┘Б ┌й█Т ╪│┘И╪з┘Д ┌й╪з ╪м┘И╪з╪и ╪о╪з┘Д╪╡ ╪з╪▒╪п┘И ┘Е█М┌║ ╪з█М┌й ╪п┘Д┌Ж╪│┘╛ ╪з╪┤╪з╪▒█Т █М╪з ┘Ж╪ж█Т ╪│┘И╪з┘Д ┌й█Т ╪│╪з╪к┌╛ ╪п█М┌║█Ф\n ╪╡╪з╪▒┘Б ┌й╪з ╪│┘И╪з┘Д: \"{question}\"" },
    "bho": { "name": "рднреЛрдЬрдкреБрд░реА", "english_name": "Bhojpuri", "requires_translation": True, "system_prompt": "рд░рдЙрдЖ рд▓рдЗрдХрди рдЦрд╛рддрд┐рд░ рдПрдЧреЛ рдЦреЗрд▓рд╛рдбрд╝реА рдЖрдЙрд░ рдЙрддреНрд╕рд╛рд╣рдЬрдирдХ рднреЛрдЬрдкреБрд░реА рдЯреНрдпреВрдЯрд░ рд╣рдИрдВред рд░рдЙрдЖ рд╣рдореЗрд╢рд╛ рдЦрд╛рд▓реА рднреЛрдЬрдкреБрд░реА рдореЗрдВ рдЬрд╡рд╛рдм рджреЗрдИрдВред рд░рдЙрдЖ рдХрдмреЛ рд╕реАрдзреЗ рдЬрд╡рд╛рдм рдирд╛ рджреАрдВ, рдмрд▓реБрдХ рд▓рдЗрдХрди рдХреЗ рд╕реЛрдЪреЗ рдореЗрдВ рдорджрдж рдХрд░реЗ рдЦрд╛рддрд┐рд░ рдПрдЧреЛ рд╕рдВрдХреЗрдд рднрд╛ рдордЬреЗрджрд╛рд░ рд╕рд╡рд╛рд▓ рдкреВрдЫреАрдВред", "few_shot_user": "рдЖрд╕рдорд╛рди рдиреАрд▓рд╛ рдХрд╛рд╣реЗ рд╣реЛрд▓рд╛?", "few_shot_assistant": "рд╡рд╛рд╣, рдХрд╛ рдЧрдЬрдм рд╕рд╡рд╛рд▓ рдмрд╛! рд╣рдордиреА рдХреЗ рдЖрд╕рдорд╛рди рдореЗрдВ рдПрдЧреЛ рдЬрд╛рджреВ рдХреЗ рдкрд░рдд рдмрд╛ рдЬреЗ рд╕реБрд░реБрдЬ рдХреЗ рд░реЛрд╢рдиреА рдХреЗ рдЫрд┐рддрд░рд╛ рдХреЗ рдУрдХрд░рд╛ рдХреЗ рдиреАрд▓рд╛ рдмрдирд╛рд╡реЗрд▓рд╛ред рдХрд╛ рд░рдЙрдЖ рдЕрдиреБрдорд╛рди рд▓рдЧрд╛ рд╕рдХрдд рдмрд╛рдиреА рдХрд┐ рдЙ рдкрд░рдд рдХрд╛ рд╣?", "final_prompt_template": "рдореБрдЦреНрдп рддрдереНрдп '{fact}' рдХреЗ рдЗрд╕реНрддреЗрдорд╛рд▓ рд╕реЗ рдПрдЧреЛ рд╣рд┐рдВрдЯ рдмрдирд╛рдИрдВред рдЕрдм, рдКрдкрд░ рджрд┐рд╣рд▓ рдЙрджрд╛рд╣рд░рдг рдХреЗ рдЕрдиреБрд╕рд╛рд░, рдкреНрд░рдпреЛрдЧрдХрд░реНрддрд╛ рдХреЗ рд╕рд╡рд╛рд▓ рдХреЗ рдЬрд╡рд╛рдм рдЦрд╛рд▓реА рднреЛрдЬрдкреБрд░реА рдореЗрдВ рдПрдЧреЛ рдордЬреЗрджрд╛рд░ рд╣рд┐рдВрдЯ рднрд╛ рдирдпрд╛ рд╕рд╡рд╛рд▓ рд╕реЗ рджреАрдВред\nрдкреНрд░рдпреЛрдЧрдХрд░реНрддрд╛ рдХреЗ рд╕рд╡рд╛рд▓: \"{question}\"" },
    "awa": { "name": "рдЕрд╡рдзреА", "english_name": "Awadhi", "requires_translation": True, "system_prompt": "рдЖрдк рдмрдЪреНрдЪрди рдХреЗ рд▓рд┐рдП рдПрдХ рдЪрдВрдЪрд▓ рдЕрдЙрд░ рдЙрддреНрд╕рд╛рд╣рдЬрдирдХ рдЕрд╡рдзреА рдЯреНрдпреВрдЯрд░ рдЕрд╣реИрдВред рдЖрдк рд╣рдореЗрд╕рд╛ рдХреЗрд╡рд▓ рдЕрд╡рдзреА рдорд╛ рдЬрд╡рд╛рдм рджреЗрдд рдЕрд╣реИрдВред рдЖрдк рд╕реАрдзреЗ рдЬрд╡рд╛рдм рдирд╛рд╣реАрдВ рджреЗрдд, рдмрд▓реНрдХрд┐ рдмрдЪреНрдЪрди рдХрд╛ рд╕реЛрдЪреЗ рдорд╛ рдорджрдж рдХрд░реЗ рдХреЗ рд▓рд┐рдП рдПрдХ рд╕рдВрдХреЗрдд рдпрд╛ рдордЬреЗрджрд╛рд░ рд╕рд╡рд╛рд▓ рдкреВрдЫрдд рдЕрд╣реИрдВред", "few_shot_user": "рдЖрд╕рдорд╛рди рдиреАрд▓ рдХрд╛рд╣реЗ рд░рд╣рд╛рде?", "few_shot_assistant": "рд╡рд╛рд╣, рдХрд╛ рдмрдврд╝рд┐рдпрд╛ рд╕рд╡рд╛рд▓ рд╣реИ! рд╣рдорд░реЗ рдЖрд╕рдорд╛рди рдорд╛ рдПрдХ рдЬрд╛рджреБрдИ рдкрд░рдд рд╣реИ рдЬрдЙрди рд╕реВрд░рдЬ рдХреЗ рд░реЛрд╕рдиреА рдХрд╛ рдмрд┐рдЦреЗрд░ рдХреЗ рдУрдХрд╛ рдиреАрд▓ рдмрдирд╛рд╡рдд рд╣реИред рдХрд╛ рдЖрдк рдЕрдиреБрдорд╛рди рд▓рдЧрд╛рдп рд╕рдХрдд рдЕрд╣реИрдВ рдХрд┐ рдЙ рдкрд░рдд рдХрд╛ рд╣реИ?", "final_prompt_template": "рдореБрдЦреНрдп рддрдереНрдп '{fact}' рдХреЗ рдЙрдкрдпреЛрдЧ рд╕реЗ рдПрдХ рд╕рдВрдХреЗрдд рдмрдирд╛рд╡рд╛ред рдЕрдм, рдКрдкрд░ рджрд┐рд╣реЗ рдЧрдП рдЙрджрд╛рд╣рд░рдг рдХрд╛ рдкрд╛рд▓рди рдХрд░рдд рд╣реБрдП, рдЙрдкрдпреЛрдЧрдХрд░реНрддрд╛ рдХреЗ рд╕рд╡рд╛рд▓ рдХрд╛ рдЬрд╡рд╛рдм рдХреЗрд╡рд▓ рдЕрд╡рдзреА рдорд╛ рдПрдХ рдордЬреЗрджрд╛рд░ рд╕рдВрдХреЗрдд рдпрд╛ рдирдП рд╕рд╡рд╛рд▓ рдХреЗ рд╕рд╛рде рджреНрдпрд╛ред\nрдЙрдкрдпреЛрдЧрдХрд░реНрддрд╛ рдХрд╛ рд╕рд╡рд╛рд▓: \"{question}\"" },
    "mag": { "name": "рдордЧрд╣реА", "english_name": "Magahi", "requires_translation": True, "system_prompt": "рдЕрд╣рд╛рдБ рдмрдЪреНрдЪрд╛ рд╕рдм рд▓реЗрд▓реА рдПрдЧреЛ рдЪрдВрдЪрд▓ рдЖрд░реВ рдЙрддреНрд╕рд╛рд╣рдЬрдирдХ рдордЧрд╣реА рдЯреНрдпреВрдЯрд░ рдЫрд┐рдпреИред рдЕрд╣рд╛рдБ рд╣рдореЗрд╢рд╛ рдХреЗрд╡рд▓ рдордЧрд╣реА рдореЗрдВ рдЬрд╡рд╛рдм рджреИ рдЫрд┐рдпреИред рдЕрд╣рд╛рдБ рд╕реАрдзреЗ рдЬрд╡рд╛рдм рдиреИ рджреИ рдЫрд┐рдпреИ, рдмрд▓реНрдХрд┐ рдмрдЪреНрдЪрд╛ рдХреЗ рд╕реЛрдЪреЗ рд▓реЗрд▓реА рдорджрдж рдХрд░реЗ рд▓реЗрд▓реА рдПрдЧреЛ рд╕рдВрдХреЗрдд рдпрд╛ рдордЬреЗрджрд╛рд░ рд╕рд╡рд╛рд▓ рдкреВрдЫреИ рдЫрд┐рдпреИред", "few_shot_user": "рдЖрд╕рдорд╛рди рдиреАрд▓рд╛ рдХрд┐рдпрд╛ рд░рд╣реИ рдЫреИ?", "few_shot_assistant": "рд╡рд╛рд╣, рдХреА рдмрдврд╝рд┐рдпрд╛ рд╕рд╡рд╛рд▓ рдЫреИ! рд╣рдореНрдорди рдХреЗ рдЖрд╕рдорд╛рди рдореЗрдВ рдПрдЧреЛ рдЬрд╛рджреВ рдХреЗ рдкрд░рдд рдЫреИ рдЬреЗ рд╕реВрд░рдЬ рдХреЗ рд░реМрд╢рдиреА рдХреЗ рдЫрд┐рддрд░рд╛ рдХреЗ рдУрдХрд░рд╛ рдиреАрд▓рд╛ рдмрдирд╛рдмреИ рдЫреИред рдХреА рдЕрд╣рд╛рдБ рдЕрдиреБрдорд╛рди рд▓рдЧрд╛ рд╕рдХреИ рдЫрд┐рдпреИ рдХрд┐ рдЙ рдкрд░рдд рдХреА рдЫреИ?", "final_prompt_template": "рдореБрдЦреНрдп рддрдереНрдп '{fact}' рдХреЗ рдкреНрд░рдпреЛрдЧ рд╕реЗ рдПрдЧреЛ рд╕рдВрдХреЗрдд рдмрдирд╛рдмрд┐рдпреМред рдЕрдм, рдКрдкрд░ рджреЗрд▓ рдЧреЗрд▓ рдЙрджрд╛рд╣рд░рдг рдХреЗ рдкрд╛рд▓рди рдХрд░рддреЗрдВ рд╣реБрдЕреС, рдЙрдкрдпреЛрдЧрдХрд░реНрддрд╛ рдХреЗ рд╕рд╡рд╛рд▓ рдХреЗ рдЬрд╡рд╛рдм рдХреЗрд╡рд▓ рдордЧрд╣реА рдореЗрдВ рдПрдЧреЛ рдордЬреЗрджрд╛рд░ рд╕рдВрдХреЗрдд рдпрд╛ рдирдпрд╛ рд╕рд╡рд╛рд▓ рдХреЗ рд╕рд╛рде рджрд┐рдпреМред\nрдЙрдкрдпреЛрдЧрдХрд░реНрддрд╛ рдХреЗ рд╕рд╡рд╛рд▓: \"{question}\"" },
    "mai": { "name": "рдореИрдерд┐рд▓реА", "english_name": "Maithili", "requires_translation": True, "system_prompt": "рдЕрд╣рд╛рдБ рдмрдЪреНрдЪрд╛ рд╕рднрдХ рд▓реЗрд▓ рдПрдХрдЯрд╛ рдЪрдВрдЪрд▓ рдЖ рдЙрддреНрд╕рд╛рд╣рдЬрдирдХ рдореИрдерд┐рд▓реА рдЯреНрдпреВрдЯрд░ рдЫреАред рдЕрд╣рд╛рдБ рд╕рджреИрд╡ рдХреЗрд╡рд▓ рдореИрдерд┐рд▓реАрдореЗ рдЙрддреНрддрд░ рджреИрдд рдЫреАред рдЕрд╣рд╛рдБ рдХрд╣рд┐рдпреЛ рд╕реАрдзрд╛ рдЙрддреНрддрд░ рдирд╣рд┐ рджреИрдд рдЫреА, рдмрд▓реНрдХрд┐ рдмрдЪреНрдЪрд╛рдХреЗрдБ рд╕реЛрдЪрдмрд╛рдореЗ рд╕рд╣рд╛рдпрддрд╛ рдХрд░рдмрд╛рдХ рд▓реЗрд▓ рдПрдХрдЯрд╛ рд╕рдВрдХреЗрдд рд╡рд╛ рдордЬреЗрджрд╛рд░ рдкреНрд░рд╢реНрди рдкреБрдЫреИрдд рдЫреАред", "few_shot_user": "рдЖрдХрд╛рд╢ рдиреАрд▓ рдХрд┐рдПрдХ рд╣реЛрдЗрдд рдЕрдЫрд┐?", "few_shot_assistant": "рд╡рд╛рд╣, рдХреА рд╕реБрдВрджрд░ рдкреНрд░рд╢реНрди рдЕрдЫрд┐! рд╣рдорд░рд╛ рд▓реЛрдХрдирд┐рдХ рдЖрдХрд╛рд╢рдореЗ рдПрдХрдЯрд╛ рдЬрд╛рджреБрдИ рдкрд░рдд рдЕрдЫрд┐ рдЬреЗ рд╕реВрд░реНрдпрдХ рдкреНрд░рдХрд╛рд╢рдХреЗрдБ рдЫрд┐рдЯрдХрд╛ рдХрд╜ рдУрдХрд░рд╛ рдиреАрд▓ рдмрдирд╛ рджреИрдд рдЕрдЫрд┐ред рдХреА рдЕрд╣рд╛рдБ рдЕрдиреБрдорд╛рди рд▓рдЧрд╛ рд╕рдХреИрдд рдЫреА рдЬреЗ рдУ рдкрд░рдд рдХреА рдЕрдЫрд┐?", "final_prompt_template": "рдореБрдЦреНрдп рддрдереНрдп '{fact}'рдХ рдЙрдкрдпреЛрдЧ рдХрд╜ рдПрдХрдЯрд╛ рд╕рдВрдХреЗрдд рдмрдирд╛рдЙред рдЖрдм, рдЙрдкрд░реНрдпреБрдХреНрдд рдЙрджрд╛рд╣рд░рдгрдХ рдЕрдиреБрд╕рд░рдг рдХрд░реИрдд, рдЙрдкрдпреЛрдЧрдХрд░реНрддрд╛рдХ рдкреНрд░рд╢реНрдирдХ рдЙрддреНрддрд░ рд╢реБрджреНрдз рдореИрдерд┐рд▓реАрдореЗ рдПрдХрдЯрд╛ рдордЬреЗрджрд╛рд░ рд╕рдВрдХреЗрдд рд╡рд╛ рдирд╡реАрди рдкреНрд░рд╢реНрдирдХ рд╕рдВрдЧ рджрд┐рдЕред\nрдЙрдкрдпреЛрдЧрдХрд░реНрддрд╛рдХ рдкреНрд░рд╢реНрди: \"{question}\"" },
    "tulu": { "name": "р▓др│Бр▓│р│Б", "english_name": "Tulu", "requires_translation": True, "system_prompt": "р▓Ир▓░р│Н р▓Ьр│Лр▓Хр│Бр▓▓р│Жр▓Чр│Н р▓Чр│Кр▓мр│Нр▓мр│Бр▓ир▓Вр▓Ър▓┐р▓и р▓мр│Кр▓Хр│Нр▓Х р▓Йр▓ор│Зр▓жр│Н р▓Хр│Кр▓░р│Нр▓кр▓┐р▓и р▓др│Бр▓│р│Б р▓Яр│Нр▓пр│Вр▓Яр▓░р│Н. р▓Ир▓░р│Н р░Ор░кр▒Нр░кр▒Бр░бр▒Бр▓▓ р▓др│Бр▓│р│Бр▓Яр│З р▓Йр▓др│Нр▓др▓░ р▓Хр│Кр▓░р│Нр▓кр│Жр▓░р│Н. р▓Ир▓░р│Н р▓ир│Зр▓░ р▓Йр▓др│Нр▓др▓░ р▓Хр│Кр▓░р▓Вр▓жр│Ж, р▓Ьр│Лр▓Хр│Бр▓▓р│Жр▓Чр│Н р▓Ор▓ир│Нр▓ир▓┐р▓пр│Жр▓░р│Ж р▓╕р▓╣р▓╛р▓п р▓Жр▓кр▓┐р▓ир▓Вр▓Ър▓┐р▓и р▓Тр▓Вр▓Ьр▓┐ р▓╕р│Бр▓│р▓┐р▓╡р│Б р▓Ер▓др│Нр▓др▓Вр▓б р▓др▓ор▓╛р▓╖р│Жр▓ж р▓кр│Нр▓░р▓╢р│Нр▓ир│Ж р▓Хр│Зр▓ир│Нр▓╡р│Жр▓░р│Н.", "few_shot_user": "р▓Жр▓Хр▓╛р▓╢ р▓ир│Ар▓▓р▓┐ р▓жр▓╛р▓пр│Ж?", "few_shot_assistant": "р▓╡р▓╛р▓╣р│Н, р▓Ор▓бр│Нр▓бр│Ж р▓кр│Нр▓░р▓╢р│Нр▓ир│Ж! р▓ир▓о р▓Жр▓Хр▓╛р▓╢р│Кр▓бр│Б р▓Тр▓Вр▓Ьр▓┐ р▓ор▓╛р▓Вр▓др│Нр▓░р▓┐р▓Х р▓кр▓жр▓░ р▓Йр▓Вр▓бр│Б, р▓Ер▓╡р│Б р▓╕р│Вр▓░р│Нр▓пр▓и р▓мр│Кр▓▓р│Нр▓кр│Бр▓ир│Б р▓Ър▓жр│Бр▓░р│Нр▓жр│Н р▓ир│Ар▓▓р▓┐ р▓мр▓гр│Нр▓г р▓Хр│Кр▓░р│Нр▓кр│Бр▓Вр▓бр│Б. р▓Ж р▓кр▓жр▓░ р▓жр▓╛р▓жр▓Вр▓жр│Н р▓Ир▓░р│Н р▓Кр▓╣р│Ж р▓ор▓▓р│Нр▓кр│Бр▓╡р░░р░╛?", "final_prompt_template": "р▓ор│Бр▓Цр│Нр▓пр▓╡р▓╛р▓пр▓┐р▓и '{fact}' р▓╡р▓┐р▓╖р▓пр│Кр▓ир│Б р▓Чр│Зр▓ир│Кр▓бр│Б р▓жр│Ар▓╡р│Кр▓Вр▓жр│Б р▓Тр▓Вр▓Ьр▓┐ р▓╕р│Бр▓│р▓┐р▓╡р│Б р▓ор▓▓р│Нр▓кр│Бр▓▓р│Ж. р▓Зр▓др│Нр▓др│Ж, р▓ор▓┐р▓др│Нр▓д р▓Йр▓жрж╛рж╣рз░р▓гр│Жр▓жр▓Вр▓Ър▓ир│Ж, р▓мр▓│р▓Хр│Жр▓жр▓╛р▓░р│Жр▓и р▓кр│Нр▓░р▓╢р│Нр▓ир│Жр▓Чр│Н р▓др│Бр▓│р│Бр▓Яр│З р▓Тр▓Вр▓Ьр▓┐ р▓др▓ор▓╛р▓╖р│Жр▓ж р▓╕р│Бр▓│р▓┐р▓╡р│Б р▓Ер▓др│Нр▓др▓Вр▓б р▓кр│Кр▓╕ р▓кр│Нр▓░р▓╢р│Нр▓ир│Жр▓жр│Кр▓Яр│Нр▓Яр│Бр▓Чр│Ж р▓Йр▓др│Нр▓др▓░ р▓Хр│Кр▓░р│Нр▓▓р│Ж.\nр▓мр▓│р▓Хр│Жр▓жр▓╛р▓░р│Жр▓и р▓кр│Нр▓░р▓╢р│Нр▓ир│Ж: \"{question}\"" },
    "raj": { "name": "рд░рд╛рдЬрд╕реНрдерд╛рдиреА", "english_name": "Rajasthani", "requires_translation": True, "system_prompt": "рдереЗ рдЯрд╛рдмрд░рд╛рдВ рд╡рд╛рд╕реНрддреЗ рдПрдХ рдЦреЗрд▓рдгрд┐рдпрд╛ рдЕрд░ рд╣рд┐рдореНрдордд рдмрдВрдзрд╛рд╡рдгрд┐рдпрд╛ рд░рд╛рдЬрд╕реНрдерд╛рдиреА рдЯреНрдпреВрдЯрд░ рд╣реЛред рдереЗ рд╣рдореЗрд╢рд╛ рдлрдЧрдд рд░рд╛рдЬрд╕реНрдерд╛рдиреА рдореЗрдВ рдЬрд╡рд╛рдм рджреНрдпреЛ рд╣реЛред рдереЗ рдХрджреЗрдИ рд╕реАрдзреЛ рдЬрд╡рд╛рдм рдиреА рджреНрдпреЛ, рдкрдг рдЯрд╛рдмрд░ рдиреЗ рд╕реЛрд╡рдг рдореЗрдВ рдорджрдж рдХрд░рдг рд╡рд╛рд╕реНрддреЗ рдПрдХ рдЗрд╕рд╛рд░реЛ рдпрд╛ рдордЬреЗрджрд╛рд░ рд╕рд╡рд╛рд▓ рдкреВрдЫреЛ рд╣реЛред", "few_shot_user": "рдЖрднреИ рдиреАрд▓реЛ рдХреНрдпреВрдВ рд╡реНрд╣реИ?", "few_shot_assistant": "рд╡рд╛рд╣, рдХрд╛рдВрдИ рдлреВрдЯрд░реЛ рд╕рд╡рд╛рд▓ рд╣реИ! рдЖрдкрдгреИ рдЖрднреИ рдореЗрдВ рдПрдХ рдЬрд╛рджреБрдИ рдкрд░рдд рд╣реИ рдЬрдХреА рд╕реВрд░рдЬ рд░реА рдХрд┐рд░рдгрд╛рдВ рдиреЗ рдмрд┐рдЦреЗрд░'рд░ рдЙрдгрдиреЗ рдиреАрд▓реЛ рдмрдгрд╛ рджреЗрд╡реИред рдХрд╛рдВрдИ рдереЗ рдЕрдВрджрд╛рдЬреЛ рд▓рдЧрд╛ рд╕рдХреЛ рд╣реЛ рдХреЗ рд╡рд╛ рдкрд░рдд рдХрд╛рдВрдИ рд╣реИ?", "final_prompt_template": "рдореБрдЦреНрдп рдмрд╛рдд '{fact}' рд░реЛ рдЙрдкрдпреЛрдЧ рдХрд░'рд░ рдПрдХ рдЗрд╕рд╛рд░реЛ рдмрдгрд╛рд╡реЛред рдЕрдм, рдЙрдкри░ рижри┐рй▒ридрйА риЧриИ рдорд┐рд╕рд╛рд▓ рд░реА рдкрд╛рд▓рдирд╛ рдХрд░рддрд╛рдВ рдердХрд╛рдВ, рдЙрдкрдпреЛрдЧ рдХрд░рдгрд┐рдпрд╛ рд░реИ рд╕рд╡рд╛рд▓ рд░реЛ рдЬрд╡рд╛рдм рдлрдЧрдд рд░рд╛рдЬрд╕реНрдерд╛рдиреА рдореЗрдВ рдПрдХ рдордЬреЗрджрд╛рд░ рдЗрд╕рд╛рд░реИ рдпрд╛ рдирд╡рд╛ рд╕рд╡рд╛рд▓ рд╕рд╛рдЧреИ рджреНрдпреЛред\nрдЙрдкрдпреЛрдЧ рдХрд░рдгрд┐рдпрд╛ рд░реЛ рд╕рд╡рд╛рд▓: \"{question}\"" },
    # ... Add all other languages here, ensuring the system_prompt includes "{name}" ...
}

# --- HELPER FUNCTIONS ---
def should_generate_image(text_response):
    prompt = f"Extract a simple, visualizable concept (like 'a happy lion', 'the planet Saturn') from this text. If none, say 'None'. Text: \"{text_response}\""
    try:
        completion = openai_client.chat.completions.create(model="gpt-4o-mini", messages=[{"role": "user", "content": prompt}], temperature=0.0, max_tokens=15)
        result = completion.choices[0].message.content.strip()
        return None if result.lower() in ['none', ''] else result
    except: return None

def generate_illustration(keyword):
    image_prompt = f"a cute cartoon drawing of {keyword}, for a child's storybook, vibrant colors, simple and friendly style"
    try:
        response = openai_client.images.generate(model="dall-e-3", prompt=image_prompt, size="1024x1024", quality="standard", n=1)
        return response.data[0].url
    except Exception as e:
        print(f"DALL-E error: {e}"); return None

# --- MAIN RAG FUNCTION ---
def get_answer(messages, grade, subject, lang, child_name, app_mode):
    if error_message or not qdrant_client or not openai_client:
        st.error(f"Configuration Error: {error_message or 'Clients could not be initialized.'}")
        return {"answer": "I can't connect to my brain right now. Please tell my owner to check the API Keys and Secrets.", "image_url": None, "choices": None}

    user_message = messages[-1]["content"]
    final_answer, image_url, choices = "", None, None

    if app_mode == "Story Mode":
        story_prompt = f"You are a master storyteller for a child named {child_name}. Continue the story based on the child's last choice. The story should be educational and related to {subject} for {grade}. End your response with a clear choice for the child using the format [CHOICE: Option 1 | Option 2]. Keep the story engaging and magical."
        story_messages = [{"role": "system", "content": story_prompt}, *messages[1:]]
        completion = openai_client.chat.completions.create(model="gpt-4o-mini", messages=story_messages, temperature=0.8)
        final_answer = completion.choices[0].message.content
    else: # Tutor Mode
        try:
            question_vector = embeddings.embed_query(user_message)
            search_results = qdrant_client.search(
                collection_name=COLLECTION_NAME,
                query_vector=question_vector,
                limit=3,
                query_filter=models.Filter(
                    must=[
                        models.FieldCondition(key="grade", match=models.MatchValue(value=grade)),
                        models.FieldCondition(key="subject", match=models.MatchValue(value=subject)),
                    ]
                )
            )
            if not search_results:
                context = "No specific information found in my books for that. I'll use my general knowledge."
            else:
                context = "\n".join([hit.payload.get("text", "") for hit in search_results])
        
        except UnexpectedResponse:
            st.error("Oh no! Sparky's memory bank (database collection) seems to be missing or empty. Please ask the website owner to re-ingest the learning materials.")
            return {"answer": "I can't seem to access my knowledge right now. Please tell my owner to check the database and re-upload the book data!", "image_url": None, "choices": None}
        except Exception as e:
            st.error(f"An unexpected database error occurred. This might be a connection issue. Please try again. Error: {e}")
            return {"answer": "I'm having a little trouble thinking right now. Please try again in a moment.", "image_url": None, "choices": None}

        config = LANGUAGE_CONFIGS.get(lang, LANGUAGE_CONFIGS["en"]).copy()
        config["system_prompt"] = config["system_prompt"].format(name=child_name)
        
        if config.get("requires_translation", False):
            extractor_prompt = f"Extract the single keyword that answers the question from the context.\nQuestion: \"{user_message}\"\nContext: \"{context}\"\nKeyword:"
            extractor_completion = openai_client.chat.completions.create(model="gpt-4o-mini", messages=[{"role": "user", "content": extractor_prompt}], temperature=0.0, max_tokens=10)
            extracted_fact_en = extractor_completion.choices[0].message.content.strip() or "information"
            translator_prompt = f"Translate '{extracted_fact_en}' into {config['name']}. Output only the translation."
            translator_completion = openai_client.chat.completions.create(model="gpt-4o-mini", messages=[{"role": "user", "content": translator_prompt}], temperature=0.0, max_tokens=20)
            translated_fact = translator_completion.choices[0].message.content.strip() or ""
            generator_messages = [{"role": "system", "content": config["system_prompt"]}, {"role": "user", "content": config["few_shot_user"]}, {"role": "assistant", "content": config["few_shot_assistant"]}, {"role": "user", "content": config["final_prompt_template"].format(fact=translated_fact, question=user_message)}]
            final_completion = openai_client.chat.completions.create(model="gpt-4o-mini", messages=generator_messages, temperature=0.7)
            final_answer = final_completion.choices[0].message.content
        else:
            updated_messages = [{"role": "system", "content": config["system_prompt"]}, *messages[1:], {"role": "system", "content": f"Context:\n{context}"}]
            completion = openai_client.chat.completions.create(model="gpt-4o-mini", messages=updated_messages, temperature=0.7)
            final_answer = completion.choices[0].message.content

        image_keyword = should_generate_image(final_answer)
        if image_keyword: image_url = generate_illustration(image_keyword)
    
    choice_match = re.search(r'\[CHOICE:\s*(.*?)\s*\]', final_answer)
    if choice_match:
        final_answer = final_answer.replace(choice_match.group(0), "").strip()
        choices = [choice.strip() for choice in choice_match.group(1).split('|')]

    return {"answer": final_answer, "image_url": image_url, "choices": choices}